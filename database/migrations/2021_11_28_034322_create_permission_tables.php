<?php
bolt_decrypt( __FILE__ , 'jHW2jR'); return 0;
##!!!##