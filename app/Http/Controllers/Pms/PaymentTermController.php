<?php
bolt_decrypt( __FILE__ , 'sB6VUU'); return 0;
##!!!##