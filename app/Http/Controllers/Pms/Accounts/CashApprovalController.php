<?php
bolt_decrypt( __FILE__ , 'NBBYVh'); return 0;
##!!!##