<?php
bolt_decrypt( __FILE__ , '5ttACI'); return 0;
##!!!##