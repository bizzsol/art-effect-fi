<?php
bolt_decrypt( __FILE__ , 'JWi9bb'); return 0;
##!!!##