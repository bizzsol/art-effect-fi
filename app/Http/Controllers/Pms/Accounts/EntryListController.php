<?php
bolt_decrypt( __FILE__ , 'w5deD8'); return 0;
##!!!##