<?php
bolt_decrypt( __FILE__ , 'ZTbjBL'); return 0;
##!!!##