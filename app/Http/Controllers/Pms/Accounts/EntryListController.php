<?php
bolt_decrypt( __FILE__ , 'b5qaij'); return 0;
##!!!##