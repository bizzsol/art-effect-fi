<?php
bolt_decrypt( __FILE__ , 'yiDfy7'); return 0;
##!!!##