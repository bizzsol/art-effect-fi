<?php
bolt_decrypt( __FILE__ , 'cPLF1t'); return 0;
##!!!##