<?php
bolt_decrypt( __FILE__ , 'P9WuNG'); return 0;
##!!!##