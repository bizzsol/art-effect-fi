<?php
bolt_decrypt( __FILE__ , 'Aj0MPr'); return 0;
##!!!##