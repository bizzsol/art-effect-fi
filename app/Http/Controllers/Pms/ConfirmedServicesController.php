<?php
bolt_decrypt( __FILE__ , 'me5JKF'); return 0;
##!!!##