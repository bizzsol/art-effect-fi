<?php
bolt_decrypt( __FILE__ , 'ZSb9hX'); return 0;
##!!!##