<?php
bolt_decrypt( __FILE__ , 'kiIm7F'); return 0;
##!!!##