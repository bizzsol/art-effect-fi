<?php
bolt_decrypt( __FILE__ , 'xRJ1tB'); return 0;
##!!!##