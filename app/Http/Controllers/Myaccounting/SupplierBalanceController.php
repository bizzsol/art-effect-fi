<?php
bolt_decrypt( __FILE__ , '3fOReL'); return 0;
##!!!##