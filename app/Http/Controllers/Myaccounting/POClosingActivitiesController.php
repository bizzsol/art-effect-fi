<?php
bolt_decrypt( __FILE__ , 'fGgl4T'); return 0;
##!!!##