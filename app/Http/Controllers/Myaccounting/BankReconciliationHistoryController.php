<?php
bolt_decrypt( __FILE__ , 'cPXPt9'); return 0;
##!!!##