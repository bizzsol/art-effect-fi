<?php
bolt_decrypt( __FILE__ , 'sGExqT'); return 0;
##!!!##