<?php
bolt_decrypt( __FILE__ , 'qLELt6'); return 0;
##!!!##