<?php
bolt_decrypt( __FILE__ , 'GASTNz'); return 0;
##!!!##