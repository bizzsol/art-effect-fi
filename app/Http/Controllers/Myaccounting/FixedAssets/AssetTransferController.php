<?php
bolt_decrypt( __FILE__ , 'sMz9b3'); return 0;
##!!!##