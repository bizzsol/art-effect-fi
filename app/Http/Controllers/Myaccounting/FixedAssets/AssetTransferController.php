<?php
bolt_decrypt( __FILE__ , 'lFbZA9'); return 0;
##!!!##