<?php
bolt_decrypt( __FILE__ , '1RrlNY'); return 0;
##!!!##