<?php
bolt_decrypt( __FILE__ , 'FKYxKK'); return 0;
##!!!##