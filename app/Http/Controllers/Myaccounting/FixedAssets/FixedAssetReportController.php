<?php
bolt_decrypt( __FILE__ , 'YZx9P6'); return 0;
##!!!##