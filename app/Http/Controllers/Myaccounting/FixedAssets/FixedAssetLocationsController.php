<?php
bolt_decrypt( __FILE__ , 'OTSYVR'); return 0;
##!!!##