<?php
bolt_decrypt( __FILE__ , 'EZHKJf'); return 0;
##!!!##