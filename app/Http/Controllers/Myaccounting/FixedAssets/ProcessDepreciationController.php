<?php
bolt_decrypt( __FILE__ , '2AnaZF'); return 0;
##!!!##