<?php
bolt_decrypt( __FILE__ , '0t0vjC'); return 0;
##!!!##