<?php
bolt_decrypt( __FILE__ , 'NN6jvF'); return 0;
##!!!##