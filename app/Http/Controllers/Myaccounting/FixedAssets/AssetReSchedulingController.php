<?php
bolt_decrypt( __FILE__ , 'p9xKe7'); return 0;
##!!!##