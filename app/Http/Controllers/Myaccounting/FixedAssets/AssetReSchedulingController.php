<?php
bolt_decrypt( __FILE__ , 'QEVMv9'); return 0;
##!!!##