<?php
bolt_decrypt( __FILE__ , 'a0uq1B'); return 0;
##!!!##