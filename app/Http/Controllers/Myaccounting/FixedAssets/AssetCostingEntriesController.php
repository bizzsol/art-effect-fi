<?php
bolt_decrypt( __FILE__ , 'hy6cY1'); return 0;
##!!!##