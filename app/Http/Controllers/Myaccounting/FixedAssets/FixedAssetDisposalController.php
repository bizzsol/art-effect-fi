<?php
bolt_decrypt( __FILE__ , '3fc1ef'); return 0;
##!!!##