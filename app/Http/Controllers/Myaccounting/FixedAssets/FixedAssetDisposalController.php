<?php
bolt_decrypt( __FILE__ , 'O6by8p'); return 0;
##!!!##