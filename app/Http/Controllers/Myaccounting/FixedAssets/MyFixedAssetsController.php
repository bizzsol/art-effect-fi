<?php
bolt_decrypt( __FILE__ , 'ePRn8S'); return 0;
##!!!##

namespace App\Http\Controllers\Myaccounting\FixedAssets;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

use App\Models\FixedAssets\FixedAssetLocation;
use App\Models\FixedAssets\FixedAssetBatch;
use App\Models\FixedAssets\FixedAssetBatchItem;
use App\Models\FixedAssets\FixedAssetBatchItemUser;
use App\Models\FixedAssets\FixedAssetItemMovement;
use App\User;
use App\Models\PmsModels\Category;
use App\Models\PmsModels\Product;

use App, DB, DataTables;
use Illuminate\Support\Facades\Auth;

class MyFixedAssetsController extends Controller
{
    /**
     * Set global data table headers.
     *
     * @return headerColumns
     */
     public function headerColumns($value='')
     {
        $rows =  array(
            ['SL', 'SL'],
            ['company', 'company','text-center'],
            ['asset', 'asset','text-center'],
            ['batch_id', 'batch_id','text-center'],
            ['asset_code', 'asset_code', 'text-center'],
            ['location', 'location', 'text-left'], 
            ['using_duration', 'using_duration', 'text-left'], 
            ['giving_remarks', 'giving_remarks', 'text-left'], 
            ['received', 'received', 'text-center'],
            ['receiving_remarks', 'receiving_remarks', 'text-left'], 
            ['taken', 'taken', 'text-center'], 
            ['taken_remarks', 'taken_remarks', 'text-left'], 
            ['actions', 'actions', 'text-center'],
        );
        return $rows;
    }

    public function index()
    {
        try {

            if (request()->ajax()) {
                return Datatables::of(
                    FixedAssetBatchItemUser::with([
                        'batchItem.finalAsset.attributes.attributeOption.attribute',
                        'movements',
                        'batchItem.batch.costCentre.profitCentre.company',
                    ])
                    ->whereHas('batchItem', function($query){
                        return $query->where('is_disposed', 0);
                    })
                    ->where('user_id', auth()->user()->id)
                    ->when(!datatableOrdering(), function($query){
                        return $query->orderby('id', 'desc');
                    })
                )
                ->addIndexColumn()

                ->addColumn('company', function($asset){
                    return isset($asset->batchItem->batch->costCentre->profitCentre->company->code) ? $asset->batchItem->batch->costCentre->profitCentre->company->code : '';
                })
                ->filterColumn('company', function ($query, $keyword) {
                    return $query->whereHas('batch.costCentre.profitCentre.company', function ($query) use($keyword) {
                        $query->where('code', 'LIKE', '%'.$keyword.'%');
                    });
                })

                ->addColumn('asset', function($asset){
                    return isset($asset->batchItem->finalAsset->name)?$asset->batchItem->finalAsset->name .' '.getProductAttributesFaster($asset->batchItem->finalAsset):'';
                })
                ->filterColumn('asset', function ($query, $keyword) {
                    return $query->whereHas('batchItem.finalAsset', function ($query) use($keyword) {
                        $query->where('name', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->addColumn('batch_id', function($asset){
                    return isset($asset->batchItem->batch->batch)?$asset->batchItem->batch->batch:'';
                })
                ->filterColumn('batch_id', function ($query, $keyword) {
                    return $query->whereHas('batchItem.batch', function ($query) use($keyword) {
                        $query->where('batch', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->addColumn('asset_code', function($asset){
                    return isset($asset->batchItem->asset_code)?$asset->batchItem->asset_code:'';
                })
                ->filterColumn('asset_code', function ($query, $keyword) {
                    return $query->whereHas('batchItem', function ($query) use($keyword) {
                        $query->where('asset_code', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->addColumn('location', function($asset){
                    return  $asset->fixedAssetLocation->name;
                })
                ->filterColumn('location', function ($query, $keyword) {
                    return $query->whereHas('fixedAssetLocation', function ($query) use($keyword) {
                        $query->where('name', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->addColumn('using_duration', function($asset){
                    return  $asset->from .' to ' .(strtotime($asset->to) > 0 ? $asset->to : 'Now');
                })
                ->filterColumn('using_duration', function ($query, $keyword) {
                    return $query->where('from', 'LIKE', '%'.$keyword.'%')
                                 ->orWhere('to', 'LIKE', '%'.$keyword.'%');
                   
                })
                ->addColumn('received', function($asset){
                    return  $asset->is_received == 1 ? 'Yes' : 'No';
                })
                ->filterColumn('received', function ($query, $keyword) {
                    return $query->where('is_received', 'LIKE', '%'.$keyword.'%');
                   
                })
                ->addColumn('taken', function($asset){
                    return  $asset->is_taken == 1 ? 'Yes' : 'No';
                })
                ->filterColumn('taken', function ($query, $keyword) {
                    return $query->where('is_taken', 'LIKE', '%'.$keyword.'%');
                   
                })
                ->addColumn('actions', function($asset){
                    $actions='';

                    if($asset->is_received == 0){

                        $actions.='<a class="btn mb-1 btn-xs btn-success" onclick="receiveAsset('.$asset->id.', '.$asset->batchItem->asset_code.')"><i class="las la-file-alt"></i>&nbsp;Receive</a>';
                    }

                    if ($asset->movements->whereIn('status', ['pending', 'approved', 'moved'])->count() == 0) {

                        $actions .='<a class="btn mb-1 btn-xs btn-success" onclick="movementRequisition('. $asset->id .', '. $asset->batchItem->asset_code .')"><i class="las la-people-carry"></i>&nbsp;Movement Requisition</a>';
                    }

                    if($asset->movements->count() > 0){
                        $actions.='<a class="btn mb-1 btn-dark btn-xs">Movement Requisition '.ucwords(collect($asset->movements)->sortByDesc('id')->first()->status) .'</a>';
                    }
                    
                    return $actions;
                })
                ->rawColumns(['using_duration','received','taken','actions'])
                ->make(true);
            }


            $data = [
                'title' => 'My Fixed Assets',
                'headerColumns' => $this->headerColumns(),
            ];
            return view('accounting.backend.pages.fixedAssets.myAssets.index', $data);
        }catch (\Throwable $th){
            return $this->backWithError($th->getMessage());
        }
    }

    public function store(Request $request)
    {
        DB::beginTransaction();
        try{
            $user = FixedAssetBatchItemUser::find($request->id);
            $user->is_received = 1;
            $user->receiving_remarks = $request->receiving_remarks;
            $user->save();

            DB::commit();
            return response()->json([
                'success' => true,
                'message' => "Fixed Items has been Received Successfully."
            ]);
        }catch (\Throwable $th){
            DB::rollback();
            return response()->json([
                'success' => true,
                'message' => $th->getMessage()
            ]);
        }
    }

    public function show($id)
    {
        $data = [
            'user' => FixedAssetBatchItemUser::find($id)
        ];

        return view('accounting.backend.pages.fixedAssets.myAssets.receive', $data);
    }

    public function edit($id)
    {
        $data = [
            'user' => FixedAssetBatchItemUser::find($id),
            'fixedAssetLocations' => FixedAssetLocation::all(),
            'users' => \App\User::whereNotIn('id', [auth()->user()->id])->get(),
        ];

        return view('accounting.backend.pages.fixedAssets.myAssets.movement', $data);
    }

    public function update(Request $request, $id)
    {
        $request->validate([
            "fixed_asset_location_id" => 'required',
            "user_id" => 'required',
            "expected_date" => 'required',
        ]);

        try{
            $user = FixedAssetBatchItemUser::find($id);

            $movement = FixedAssetItemMovement::create([
                'fixed_asset_batch_item_user_id' => $id,
                'fixed_asset_location_id' => $request->fixed_asset_location_id,
                'user_id' => $request->user_id,
                'expected_date' => $request->expected_date,
                'remarks' => $request->remarks,
            ]);

            DB::commit();
            return response()->json([
                'success' => true,
                'message' => "Fixed Item movement Requisition has been submitted Successfully."
            ]);
        }catch (\Throwable $th){
            DB::rollback();
            return response()->json([
                'success' => false,
                'message' => $th->getMessage()
            ]);
        }
    }

    public function destroy($id)
    {
        
    }
}
