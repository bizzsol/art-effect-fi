<?php
bolt_decrypt( __FILE__ , 'PVXj0S'); return 0;
##!!!##