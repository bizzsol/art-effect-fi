<?php
bolt_decrypt( __FILE__ , 'SHXHSj'); return 0;
##!!!##