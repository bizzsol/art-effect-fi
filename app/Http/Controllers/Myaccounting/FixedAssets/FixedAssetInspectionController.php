<?php
bolt_decrypt( __FILE__ , 'p9RRKP'); return 0;
##!!!##