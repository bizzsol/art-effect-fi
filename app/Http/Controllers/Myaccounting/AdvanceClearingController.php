<?php
bolt_decrypt( __FILE__ , 'IIdVd8'); return 0;
##!!!##