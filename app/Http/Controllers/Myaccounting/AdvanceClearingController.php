<?php
bolt_decrypt( __FILE__ , 'fG1pkO'); return 0;
##!!!##