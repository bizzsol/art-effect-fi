<?php
bolt_decrypt( __FILE__ , 'R9xT9x'); return 0;
##!!!##