<?php
bolt_decrypt( __FILE__ , '9NpReR'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcTXlhY2NvdW50aW5nOwoKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXENvbnRyb2xsZXI7CnVzZSBJbGx1bWluYXRlXEh0dHBcUmVxdWVzdDsKCnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcQ2hhcnRPZkFjY291bnQ7CnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcVW5yZWFsaXplZEN1cnJlbmN5RXZlbnRTZXR0aW5nOwp1c2UgXEFwcFxNb2RlbHNcUG1zTW9kZWxzXEFjY291bnRzXFVucmVhbGl6ZWRDdXJyZW5jeUV2ZW50Owp1c2UgXEFwcFxNb2RlbHNcUG1zTW9kZWxzXEFjY291bnRzXFVucmVhbGl6ZWRDdXJyZW5jeUV2ZW50TGVkZ2VyOwoKdXNlIFxBcHBcTW9kZWxzXFBtc01vZGVsc1xBY2NvdW50c1xDdXJyZW5jeTsKdXNlIFxBcHBcTW9kZWxzXFBtc01vZGVsc1xBY2NvdW50c1xFeGNoYW5nZVJhdGU7CnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcRW50cnlJdGVtOwoKdXNlIFxBcHBcTW9kZWxzXFBtc01vZGVsc1xTdXBwbGllcnM7CnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcU3VwcGxpZXJQYXltZW50OwoKdXNlIFxBcHBcVXNlcjsKCnVzZSBBcHAsIERCLCBEYXRhVGFibGVzOwp1c2UgSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcQXV0aDsKCmNsYXNzIFVucmVhbGl6ZWRDdXJyZW5jeUhpc3Rvcmllc0NvbnRyb2xsZXIgZXh0ZW5kcyBDb250cm9sbGVyCnsKICAgIHB1YmxpYyBmdW5jdGlvbiBoZWFkZXJDb2x1bW5zKCR2YWx1ZT0nJykKICAgIHsKICAgICAgICByZXR1cm4gYXJyYXkoCiAgICAgICAgICAgIFsnU0wnLCAnU0wnXSwgCiAgICAgICAgICAgIFsncmVmZXJlbmNlJywgJ3JlZmVyZW5jZScsICd0ZXh0LWNlbnRlciddLAogICAgICAgICAgICBbJ3J1bl9kYXRlJywgJ3J1bl9kYXRlJywgJ3RleHQtY2VudGVyJ10sCiAgICAgICAgICAgIFsncmV2ZXJzYWxfZGF0ZScsICdyZXZlcnNhbF9kYXRlJywgJ3RleHQtY2VudGVyJ10sCiAgICAgICAgICAgIFsncGF5YWJsZXMnLCAncGF5YWJsZXMnLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWydyZWNlaXZhYmxlcycsICdyZWNlaXZhYmxlcycsICd0ZXh0LWNlbnRlciddLAogICAgICAgICAgICBbJ3Byb2Nlc3NlZF9ieScsICdwcm9jZXNzZWRfYnknLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWydwcm9jZXNzZWRfYXQnLCAncHJvY2Vzc2VkX2F0JywgJ3RleHQtY2VudGVyJ10sCiAgICAgICAgKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gaW5kZXgoKQogICAgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmIChyZXF1ZXN0KCktPmFqYXgoKSkgewogICAgICAgICAgICAgICAgJGV2ZW50cyA9IFVucmVhbGl6ZWRDdXJyZW5jeUV2ZW50Ojp3aXRoKFsKICAgICAgICAgICAgICAgICAgICAnbGVkZ2VycycsICdjcmVhdG9yJwogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIC0+d2hlbighZGF0YXRhYmxlT3JkZXJpbmcoKSwgZnVuY3Rpb24oJHF1ZXJ5KXsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHF1ZXJ5LT5vcmRlcmJ5KCdpZCcsICdkZXNjJyk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVRhYmxlczo6b2YoJGV2ZW50cykKICAgICAgICAgICAgICAgIC0+YWRkSW5kZXhDb2x1bW4oKQogICAgICAgICAgICAgICAgLT5hZGRDb2x1bW4oJ3JlZmVyZW5jZScsIGZ1bmN0aW9uKCRldmVudCl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICc8YSBjbGFzcz0idGV4dC1wcmltYXJ5IiBvbmNsaWNrPSJzaG93TGVkZ2VycygkKHRoaXMpKSIgZGF0YS1pZD0iJy4kZXZlbnQtPmlkLiciIGRhdGEtcmVmZXJlbmNlPSInLiRldmVudC0+cmVmZXJlbmNlLiciPicuJGV2ZW50LT5yZWZlcmVuY2UuJzwvYT4nOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC0+YWRkQ29sdW1uKCdwYXlhYmxlcycsIGZ1bmN0aW9uKCRldmVudCl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRldmVudC0+cGF5YWJsZSA9PSAxID8gJzxhIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1wcmltYXJ5Ij5ZZXM8L2E+JyA6ICcnOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC0+YWRkQ29sdW1uKCdyZWNlaXZhYmxlcycsIGZ1bmN0aW9uKCRldmVudCl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRldmVudC0+cmVjZWl2YWJsZSA9PSAxID8gJzxhIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1wcmltYXJ5Ij5ZZXM8L2E+JyA6ICcnOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC0+YWRkQ29sdW1uKCdwcm9jZXNzZWRfYnknLCBmdW5jdGlvbigkZXZlbnQpewogICAgICAgICAgICAgICAgICAgIHJldHVybiAkZXZlbnQtPmNyZWF0b3IgPyAkZXZlbnQtPmNyZWF0b3ItPm5hbWUgOiAnJzsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAtPmZpbHRlckNvbHVtbigncHJvY2Vzc2VkX2J5JywgZnVuY3Rpb24oJHF1ZXJ5LCAka2V5d29yZCl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRxdWVyeS0+d2hlcmVIYXMoJ2NyZWF0b3InLCBmdW5jdGlvbigkcXVlcnkpIHVzZSgka2V5d29yZCl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkcXVlcnktPndoZXJlKCduYW1lJywgJ0xJS0UnLCAnJScuJGtleXdvcmQuJyUnKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAtPm9yZGVyQ29sdW1uKCdkZWJpdF9sZWRnZXInLCBmdW5jdGlvbiAoJHF1ZXJ5LCAkb3JkZXIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGxlYXNlU29ydE1lKCRxdWVyeSwgJG9yZGVyLCBVc2VyOjpzZWxlY3QoJ3VzZXJzLm5hbWUnKQogICAgICAgICAgICAgICAgICAgICAgICAtPndoZXJlQ29sdW1uKCd1c2Vycy5pZCcsICd1bnJlYWxpemVkX2N1cnJlbmN5X2V2ZW50cy5jcmVhdGVkX2J5JykKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC0+YWRkQ29sdW1uKCdwcm9jZXNzZWRfYXQnLCBmdW5jdGlvbigkZXZlbnQpewogICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRlKCdZLW0tZCBnOmkgYScsIHN0cnRvdGltZSgkZXZlbnQtPmNyZWF0ZWRfYXQpKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAtPnJhd0NvbHVtbnMoWydyZWZlcmVuY2UnLCAncGF5YWJsZXMnLCAncmVjZWl2YWJsZXMnXSkKICAgICAgICAgICAgICAgIC0+bWFrZSh0cnVlKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHZpZXcoJ2FjY291bnRpbmcuYmFja2VuZC5wYWdlcy51bnJlYWxpemVkQ3VycmVuY3lFdmFsdWF0aW9uLmhpc3RvcmllcycsIFsKICAgICAgICAgICAgICAgICd0aXRsZScgPT4gJ1VucmVhbGl6ZWQgQ3VycmVuY3kgRXZlbnRzJywKICAgICAgICAgICAgICAgICdoZWFkZXJDb2x1bW5zJyA9PiAkdGhpcy0+aGVhZGVyQ29sdW1ucygpCiAgICAgICAgICAgIF0pOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPmJhY2tXaXRoRXJyb3IoJHRoLT5nZXRNZXNzYWdlKCkpOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gc2hvdygkaWQpCiAgICB7CiAgICAgICAgdHJ5ewogICAgICAgICAgICByZXR1cm4gdmlldygnYWNjb3VudGluZy5iYWNrZW5kLnBhZ2VzLnVucmVhbGl6ZWRDdXJyZW5jeUV2YWx1YXRpb24ubGVkZ2VycycsIFsKICAgICAgICAgICAgICAgICdldmVudCcgPT4gVW5yZWFsaXplZEN1cnJlbmN5RXZlbnQ6OndpdGgoWwogICAgICAgICAgICAgICAgICAgICdsZWRnZXJzLmNoYXJ0T2ZBY2NvdW50JywKICAgICAgICAgICAgICAgICAgICAnbGVkZ2Vycy50cmFuc2FjdGlvbkN1cnJlbmN5JywKICAgICAgICAgICAgICAgICAgICAnbGVkZ2Vycy5yZXBvcnRpbmdDdXJyZW5jeScsCiAgICAgICAgICAgICAgICBdKS0+ZmluZE9yRmFpbCgkaWQpCiAgICAgICAgICAgIF0pOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICByZXR1cm4gJHRoLT5nZXRNZXNzYWdlKCk7CiAgICAgICAgfQogICAgfQp9Cg==