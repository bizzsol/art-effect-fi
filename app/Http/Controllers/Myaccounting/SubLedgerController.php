<?php
bolt_decrypt( __FILE__ , 'to96bD'); return 0;
##!!!##