<?php
bolt_decrypt( __FILE__ , 'liXYC7'); return 0;
##!!!##

namespace App\Http\Controllers\Myaccounting;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

use App\Models\PmsModels\Accounts\Company;
use App\Models\PmsModels\Accounts\AccountClass;
use App\Models\PmsModels\Accounts\AccountGroup;
use App\Models\PmsModels\Accounts\ChartOfAccount;
use App\Models\PmsModels\Accounts\SubLedger;
use App\User;

use App,DB;
use Illuminate\Support\Facades\Auth;
use DataTables;

class SubLedgerController extends Controller
{   
    public function headerColumns($value='')
    {
        return array(
            ['SL', 'SL'],
            ['ledger', 'ledger'],
            ['sub_ledger_code', 'sub_ledger_code','text-center'],
            ['sub_ledger_name', 'sub_ledger_name','text-center'],
            ['notes', 'notes','text-center'],
            ['companies', 'companies','text-center'],
            ['actions', 'actions', 'text-center']
        );
    }

    public function index()
    {
        return redirect('accounting/chart-of-accounts');
    }

    public function show($id)
    {
        $account = ChartOfAccount::findOrFail($id);
        $title = 'Sub Ledgers of #['.$account->code.'] '.$account->name;
        $options = [
            'sub-ledgers-edit' => auth()->user()->hasPermissionTo('sub-ledgers-edit'),
            'sub-ledgers-delete' => auth()->user()->hasPermissionTo('sub-ledgers-delete')
        ];

        try {
            if (request()->ajax()) {
                return Datatables::of(
                    SubLedger::with([
                        'chartOfAccount.accountGroup.accountClass',
                        'chartOfAccount.companies.company',
                    ])
                    ->where('chart_of_account_id', $id)
                    ->when(!datatableOrdering(), function($query){
                        return $query->orderby('code', 'asc');
                    })
                )
                ->addIndexColumn()
                
                // ->addColumn('account_class', function($subLedger) {
                //     return isset($subLedger->chartOfAccount->accountGroup->accountClass->name) ? $subLedger->chartOfAccount->accountGroup->accountClass->name : '';
                // })
                // ->filterColumn('account_class', function ($query, $keyword) {
                //     return $query->whereHas('chartOfAccount.accountGroup.accountClass', function ($query) use($keyword) {
                //         $query->where('name', 'LIKE', '%'.$keyword.'%');
                //     });
                // })
                // ->orderColumn('account_class', function ($query, $order) {
                //     return pleaseSortMe($query, $order, ChartOfAccount::select('account_classes.name')
                //         ->join('account_classes', 'account_classes.id', '=', 'account_groups.account_class_id')
                //         ->join('account_groups', 'account_groups.id', '=', 'chart_of_accounts.account_group_id')
                //         ->whereColumn('chart_of_accounts.id', 'sub_ledgers.chart_of_account_id')
                //         ->take(1)
                //     );
                // })

                // ->addColumn('account_group', function($subLedger) {
                //     return isset($subLedger->chartOfAccount->accountGroup->name) ? '['.$subLedger->chartOfAccount->accountGroup->code.'] '.$subLedger->chartOfAccount->accountGroup->name : '';
                // })
                // ->filterColumn('account_group', function ($query, $keyword) {
                //     return $query->whereHas('chartOfAccount.accountGroup', function ($query) use($keyword) {
                //         $query->where('name', 'LIKE', '%'.$keyword.'%')
                //               ->orWhere('code', 'LIKE', '%'.$keyword.'%');
                //     });
                // })
                // ->orderColumn('account_group', function ($query, $order) {
                //     return pleaseSortMe($query, $order, ChartOfAccount::select('account_groups.code')
                //         ->join('account_groups', 'account_groups.id', '=', 'chart_of_accounts.account_group_id')
                //         ->whereColumn('chart_of_accounts.id', 'sub_ledgers.chart_of_account_id')
                //         ->take(1)
                //     );
                // })

                ->addColumn('ledger', function($subLedger) {
                    return isset($subLedger->chartOfAccount->name) ? '['.$subLedger->chartOfAccount->code.'] '.$subLedger->chartOfAccount->name : '';
                })
                ->filterColumn('ledger', function ($query, $keyword) {
                    return $query->whereHas('chartOfAccount', function ($query) use($keyword) {
                        $query->where('name', 'LIKE', '%'.$keyword.'%')
                              ->orWhere('code', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->orderColumn('ledger', function ($query, $order) {
                    return pleaseSortMe($query, $order, ChartOfAccount::select('chart_of_accounts.code')
                        ->whereColumn('chart_of_accounts.id', 'sub_ledgers.chart_of_account_id')
                        ->take(1)
                    );
                })

                ->addColumn('companies', function($subLedger) {
                    return isset($subLedger->chartOfAccount->name) ? $subLedger->chartOfAccount->companies->pluck('company.code')->implode(', ') : '';
                })
                ->filterColumn('companies', function ($query, $keyword) {
                    return $query->whereHas('chartOfAccount.companies.company', function ($query) use($keyword) {
                        $query->where('name', 'LIKE', '%'.$keyword.'%')
                              ->orWhere('code', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->orderColumn('companies', function ($query, $order) {
                    return pleaseSortMe($query, $order, ChartOfAccount::select('company.code')
                        ->join('companies', 'companies.id', '=', 'chart_of_account_companies.company_id')
                        ->join('chart_of_account_companies', 'chart_of_account_companies.chart_of_account_id', '=', 'chart_of_accounts.id')
                        ->whereColumn('chart_of_accounts.id', 'sub_ledgers.chart_of_account_id')
                        ->take(1)
                    );
                })

                ->addColumn('sub_ledger_code', function($subLedger) {
                    return $subLedger->code;
                })
                ->filterColumn('sub_ledger_code', function ($query, $keyword) {
                    return $query->where('code', 'LIKE', '%'.$keyword.'%');
                })
                ->orderColumn('sub_ledger_code', function ($query, $order) {
                    return $query->orderBy('code', $order);
                })

                ->addColumn('sub_ledger_name', function($subLedger) {
                    return $subLedger->name;
                })
                ->filterColumn('sub_ledger_name', function ($query, $keyword) {
                    return $query->where('name', 'LIKE', '%'.$keyword.'%');
                })
                ->orderColumn('sub_ledger_name', function ($query, $order) {
                    return $query->orderBy('name', $order);
                })

                ->addColumn('actions', function($subLedger) use($options){
                    $actions = '';

                    if($options['sub-ledgers-edit']){
                        $actions .= '<a class="btn btn-xs btn-primary rounded-circle m-1" href="'. url('accounting/sub-ledgers/'.$subLedger->id.'/edit').'"><i class="las la-edit"></i></a>';
                    }

                    if($options['sub-ledgers-delete']){
                        $actions .= '<a href="javascript:void(0)" class="btn btn-xs btn-danger m-1" data-src="'.route('accounting.sub-ledgers.destroy', $subLedger->id).'" onclick="deleteFromCRUD($(this))"><i class="la la-trash"></i></a>';
                    }
                    return $actions;
                })
                ->rawColumns(['actions'])
                ->make(true);
            }

            $data = [
                'title' => $title,
                'account' => $account,
                'headerColumns' => $this->headerColumns(),
            ];

            return view('accounting.backend.pages.subLedgers.index', $data);
        }catch (\Throwable $th){
            return $this->backWithError($th->getMessage());
        }
    }

    public function create()
    {
        $account = ChartOfAccount::findOrFail(request()->get('chart_of_account_id'));
        return view('accounting.backend.pages.subLedgers.create', [
            'title' => 'New Sub Ledger for #['.$account->code.'] '.$account->name,
            'account' => $account
        ]);
    }

    public function store(Request $request)
    {
        $request->validate([
            'chart_of_account_id' => 'required',
            'code' => 'required',
            'name' => 'required',
        ]);

        DB::beginTransaction();
        try{
            if(SubLedger::where('chart_of_account_id', $request->chart_of_account_id)->where('code', $request->code)->count() > 0){
                session()->flash('alert-type', 'error');
                session()->flash('message', "Sub Ledger Code #".$request->code." already been Taken!");
                return redirect('accounting/sub-ledgers/create?chart_of_account_id='.$request->chart_of_account_id);
            }

            $subLedger = new SubLedger();
            $subLedger->fill($request->all());
            $subLedger->save();

            DB::commit();
            session()->flash('alert-type', 'success');
            session()->flash('message', "Sub Ledger has been created successfully");
            return redirect('accounting/sub-ledgers/'.$request->chart_of_account_id);
        }catch (\Throwable $th){
            DB::rollback();
            session()->flash('alert-type', 'error');
            session()->flash('message', $th->getMessage());
            return redirect('accounting/sub-ledgers/create?chart_of_account_id='.$request->chart_of_account_id);
        }
    }

    public function edit($id)
    {
        $subLedger = SubLedger::with([
            'chartOfAccount',
        ])->findOrFail($id);
        $data = [
            'title' => 'Edit Sub-Ledger of #['.$subLedger->chartOfAccount->code.'] '.$subLedger->chartOfAccount->name,
            'subLedger' => $subLedger
        ];

        return view('accounting.backend.pages.subLedgers.edit', $data);
    }

    public function update(Request $request, $id)
    {
        $request->validate([
            'chart_of_account_id' => 'required',
            'code' => 'required',
            'name' => 'required',
        ]);

        DB::beginTransaction();
        try{
            if(SubLedger::where('chart_of_account_id', $request->chart_of_account_id)->where('code', $request->code)->where('id', '!=', $id)->count() > 0){
                return $this->backWithError("Sub Ledger Code #".$request->code." already been Taken!");
            }

            $subLedger = SubLedger::findOrFail($id);
            $subLedger->fill($request->all());
            $subLedger->save();

            DB::commit();
            return $this->backWithSuccess("Cost Centre has been updated successfully");
        }catch (\Throwable $th){
            DB::rollback();
            return $this->backWithError($th->getMessage());
        }
    }

    public function destroy($id)
    {
        DB::beginTransaction();
        try{
            $subledger = SubLedger::with([
                'entryItems',
            ])->findOrFail($id);
            if($subledger->entryItems->count() > 0){
                return response()->json([
                    'success' => false,
                    'message' => "Whoops! This Sub Ledger could not be deleted because it's already been used on other features!"
                ]);
            }

            $subledger->delete();
            DB::commit();
            return response()->json([
                'success' => true,
                'message' => "Sub Ledger has been Deleted!"
            ]);
        }catch (\Throwable $th){
            DB::rollback();
            return response()->json([
                'success' => false,
                'message' => $th->getMessage()
            ]);
        }
    }
}
