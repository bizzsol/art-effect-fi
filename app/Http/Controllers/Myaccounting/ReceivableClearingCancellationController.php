<?php
bolt_decrypt( __FILE__ , 'z28FgW'); return 0;
##!!!##