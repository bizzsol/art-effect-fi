<?php
bolt_decrypt( __FILE__ , '39Xczf'); return 0;
##!!!##