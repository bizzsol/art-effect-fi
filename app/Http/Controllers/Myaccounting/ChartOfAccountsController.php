<?php
bolt_decrypt( __FILE__ , 'b5NEhP'); return 0;
##!!!##