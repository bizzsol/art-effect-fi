<?php
bolt_decrypt( __FILE__ , '0kfUGN'); return 0;
##!!!##