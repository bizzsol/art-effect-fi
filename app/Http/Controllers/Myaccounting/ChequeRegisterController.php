<?php
bolt_decrypt( __FILE__ , '7LmtCA'); return 0;
##!!!##