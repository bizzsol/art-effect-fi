<?php
bolt_decrypt( __FILE__ , 'OiDzKG'); return 0;
##!!!##