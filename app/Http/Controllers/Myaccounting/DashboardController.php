<?php
bolt_decrypt( __FILE__ , 'lNLGDQ'); return 0;
##!!!##