<?php
bolt_decrypt( __FILE__ , 'kKSQEi'); return 0;
##!!!##