<?php
bolt_decrypt( __FILE__ , 'uT6d1d'); return 0;
##!!!##