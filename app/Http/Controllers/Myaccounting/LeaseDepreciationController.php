<?php
bolt_decrypt( __FILE__ , 'c6SlgA'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcTXlhY2NvdW50aW5nOwoKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXENvbnRyb2xsZXI7CnVzZSBJbGx1bWluYXRlXEh0dHBcUmVxdWVzdDsKdXNlIEFwcCwgREIsIERhdGFUYWJsZXM7Cgp1c2UgXEFwcFxNb2RlbHNcUG1zTW9kZWxzXFN1cHBsaWVyczsKCnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcQ3VycmVuY3k7CnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcRXhjaGFuZ2VSYXRlOwp1c2UgXEFwcFxNb2RlbHNcUG1zTW9kZWxzXEFjY291bnRzXENvbXBhbnk7CnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcQmFua0FjY291bnQ7Cgp1c2UgXEFwcFxNb2RlbHNcTGVhc2VcTGVhc2U7CnVzZSBcQXBwXE1vZGVsc1xMZWFzZVxMZWFzZVNjaGVkdWxlOwp1c2UgXEFwcFxNb2RlbHNcTGVhc2VcTGVhc2VFbnRyeTsKdXNlIFxBcHBcTW9kZWxzXExlYXNlXExlYXNlRGVwcmVjaWF0aW9uOwoKdXNlIFxBcHBcVXNlcjsKCgpjbGFzcyBMZWFzZURlcHJlY2lhdGlvbkNvbnRyb2xsZXIgZXh0ZW5kcyBDb250cm9sbGVyCnsKICAgIHB1YmxpYyBmdW5jdGlvbiBzaG93KCRpZCkKICAgIHsKICAgICAgICAkbGVhc2UgPSBMZWFzZTo6d2l0aChbCiAgICAgICAgICAgICdjb3N0Q2VudHJlLnByb2ZpdENlbnRyZS5jb21wYW55JywKICAgICAgICAgICAgJ3N1cHBsaWVyJywKICAgICAgICAgICAgJ2V4Y2hhbmdlUmF0ZS5jdXJyZW5jeScsCiAgICAgICAgICAgICdlbnRyaWVzLmVudHJ5LmV4Y2hhbmdlUmF0ZScsCiAgICAgICAgICAgICdzY2hlZHVsZXMuZW50cmllcy5lbnRyeS5leGNoYW5nZVJhdGUnLAogICAgICAgICAgICAnZGVwcmVjaWF0aW9ucy5lbnRyeS5lbnRyeVR5cGUnLAogICAgICAgICAgICAnZGVwcmVjaWF0aW9ucy5lbnRyeS5leGNoYW5nZVJhdGUnLAogICAgICAgICAgICAnY3JlYXRvcicsCiAgICAgICAgICAgICdlZGl0b3InCiAgICAgICAgXSktPmZpbmRPckZhaWwoJGlkKTsKCgogICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAndGl0bGUnID0+ICdMZWFzZSAjJy4kbGVhc2UtPmNvZGUsCiAgICAgICAgICAgICdsZWFzZScgPT4gJGxlYXNlCiAgICAgICAgXTsKCiAgICAgICAgaWYocmVxdWVzdCgpLT5oYXMoJ3BkZicpKXsKICAgICAgICAgICAgcmV0dXJuIGRvd25sb2FkTVBERignYWNjb3VudGluZy5iYWNrZW5kLnBhZ2VzLmxlYXNlcy5sZWFzZS1kZXByZWNpYXRpb24tcGRmJywgJGRhdGEsICRkYXRhWyd0aXRsZSddLCAkZGF0YVsndGl0bGUnXSwgJ2E0JywgJ0wnKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB2aWV3KCdhY2NvdW50aW5nLmJhY2tlbmQucGFnZXMubGVhc2VzLmRlcHJlY2lhdGlvbnMnLCAkZGF0YSk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHVwZGF0ZShSZXF1ZXN0ICRyZXF1ZXN0LCAkaWQpCiAgICB7CiAgICAgICAgREI6OmJlZ2luVHJhbnNhY3Rpb24oKTsKICAgICAgICB0cnl7CiAgICAgICAgICAgICRkZXByZWNpYXRpb24gPSBMZWFzZURlcHJlY2lhdGlvbjo6d2l0aChbCiAgICAgICAgICAgICAgICAnbGVhc2UuY29zdENlbnRyZS5wcm9maXRDZW50cmUnLAogICAgICAgICAgICBdKS0+ZmluZE9yRmFpbCgkaWQpOwogICAgICAgICAgICAkZGVwcmVjaWF0aW9uLT5zdGF0dXMgPSAnZGVwcmVjaWF0ZWQnOwogICAgICAgICAgICAkZGVwcmVjaWF0aW9uLT5zYXZlKCk7CiAgICAgICAgICAgIGlmKCRkZXByZWNpYXRpb24pewogICAgICAgICAgICAgICAgJGNvbXBhbnkgPSBDb21wYW55OjpmaW5kT3JGYWlsKCRkZXByZWNpYXRpb24tPmxlYXNlLT5jb3N0Q2VudHJlLT5wcm9maXRDZW50cmUtPmNvbXBhbnlfaWQpOwogICAgICAgICAgICAgICAgJGl0ZW1zID0gW107CiAgICAgICAgICAgICAgICBhcnJheV9wdXNoKCRpdGVtcywgWwogICAgICAgICAgICAgICAgICAgICdjb3N0X2NlbnRyZV9pZCcgPT4gJGRlcHJlY2lhdGlvbi0+bGVhc2UtPmNvc3RfY2VudHJlX2lkLAogICAgICAgICAgICAgICAgICAgICdjaGFydF9vZl9hY2NvdW50X2lkJyA9PiAkY29tcGFueS0+bGVhc2VfZGVwcmVjaWF0aW9uX2xlZGdlcl9pZCwKICAgICAgICAgICAgICAgICAgICAnZGViaXQnID0+ICRkZXByZWNpYXRpb24tPmFtb3VudCwKICAgICAgICAgICAgICAgICAgICAnY3JlZGl0JyA9PiAwLAogICAgICAgICAgICAgICAgICAgICduYXJyYXRpb24nID0+ICJMZWFzZSBEZXByZWNpYXRpb24gRGViaXQiLAogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnbGVhc2UtZGVwcmVjaWF0aW9uJywKICAgICAgICAgICAgICAgICAgICAnc291cmNlJyA9PiAkZGVwcmVjaWF0aW9uLT5pZAogICAgICAgICAgICAgICAgXSk7CiAgICAgICAgICAgICAgICBhcnJheV9wdXNoKCRpdGVtcywgWwogICAgICAgICAgICAgICAgICAgICdjb3N0X2NlbnRyZV9pZCcgPT4gJGRlcHJlY2lhdGlvbi0+bGVhc2UtPmNvc3RfY2VudHJlX2lkLAogICAgICAgICAgICAgICAgICAgICdjaGFydF9vZl9hY2NvdW50X2lkJyA9PiAkY29tcGFueS0+bGVhc2VfYWNjdW11bGF0ZWRfZGVwcmVjaWF0aW9uX2xlZGdlcl9pZCwKICAgICAgICAgICAgICAgICAgICAnZGViaXQnID0+IDAsCiAgICAgICAgICAgICAgICAgICAgJ2NyZWRpdCcgPT4gJGRlcHJlY2lhdGlvbi0+YW1vdW50LAogICAgICAgICAgICAgICAgICAgICduYXJyYXRpb24nID0+ICJMZWFzZSBBY2N1bXVsYXRlZCBEZXByZWNpYXRpb24gQ3JlZGl0IiwKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2xlYXNlLWRlcHJlY2lhdGlvbicsCiAgICAgICAgICAgICAgICAgICAgJ3NvdXJjZScgPT4gJGRlcHJlY2lhdGlvbi0+aWQKICAgICAgICAgICAgICAgIF0pOwoKICAgICAgICAgICAgICAgICRlbnRyeSA9IHNhdmVMZWRnZXJFbnRyaWVzKDUsIGRhdGUoJ1ktbS1kIEg6aTpzJyksIDEsICRkZXByZWNpYXRpb24tPmlkLCAiTGVhc2UgdmVuZG9yOiAiLiRkZXByZWNpYXRpb24tPmxlYXNlLT5zdXBwbGllci0+bmFtZS4iLCBDb250cmFjdCBJRDogIi4kZGVwcmVjaWF0aW9uLT5sZWFzZS0+Y29udHJhY3RfaWQuIiwgUmVmZXJlbmNlOiAiLiRkZXByZWNpYXRpb24tPmxlYXNlLT5jb250cmFjdF9yZWZlcmVuY2UuIiwgRGVwcmVjaWF0aW9uIGZvcjogIi5kYXRlKCdGIFknLCBzdHJ0b3RpbWUoJGRlcHJlY2lhdGlvbi0+ZGF0ZSkpLCAkaXRlbXMsICRkZXByZWNpYXRpb24tPmxlYXNlLT5leGNoYW5nZV9yYXRlX2lkLCAxLCBmYWxzZSwgMSwgJGNvbXBhbnktPmlkKTsKCiAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGVudHJ5WydzdWNjZXNzJ10pICYmICRlbnRyeVsnc3VjY2VzcyddKSB7CiAgICAgICAgICAgICAgICAgICAgJGRlcHJlY2lhdGlvbi0+ZW50cnlfaWQgPSAkZW50cnlbJ2VudHJ5J10tPmlkOwogICAgICAgICAgICAgICAgICAgICRkZXByZWNpYXRpb24tPnNhdmUoKTsKCiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbigpLT5mbGFzaCgnYWxlcnQtdHlwZScsICdzdWNjZXNzJyk7CiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbigpLT5mbGFzaCgnbWVzc2FnZScsICJEZXByZWNpYXRpb24gaGFzIGJlZW4gUG9zdGVkLiIpOwogICAgICAgICAgICAgICAgICAgIERCOjpjb21taXQoKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIERCOjpyb2xsYmFjaygpOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWwogICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJyA9PiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gJGVudHJ5WydtZXNzYWdlJ10KICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gIlNvbWV0aGluZyB3ZW50IHdyb25nISIKICAgICAgICAgICAgXSk7CiAgICAgICAgfWNhdGNoIChcVGhyb3dhYmxlICR0aCl7CiAgICAgICAgICAgIERCOjpyb2xsYmFjaygpOwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gJHRoLT5nZXRNZXNzYWdlKCkKICAgICAgICAgICAgXSk7CiAgICAgICAgfQogICAgfQp9Cg==