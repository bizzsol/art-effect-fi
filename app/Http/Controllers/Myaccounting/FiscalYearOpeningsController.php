<?php
bolt_decrypt( __FILE__ , 'hMw20z'); return 0;
##!!!##