<?php
bolt_decrypt( __FILE__ , 'tal827'); return 0;
##!!!##