<?php
bolt_decrypt( __FILE__ , 'h9Ycz0'); return 0;
##!!!##