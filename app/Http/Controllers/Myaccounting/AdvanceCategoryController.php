<?php
bolt_decrypt( __FILE__ , 'PUO7jk'); return 0;
##!!!##

namespace App\Http\Controllers\Myaccounting;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

use \App\Models\PmsModels\Accounts\ChartOfAccount;
use \App\Models\PmsModels\Accounts\AdvanceCategory;

use App,DB;
use Illuminate\Support\Facades\Auth;
use DataTables;

class AdvanceCategoryController extends Controller
{

    public function headerColumns($value='')
    {
        $rows =  array(
            ['SL', 'SL'],
            ['code', 'code','text-left'],
            ['name', 'name','text-left'],
            ['group', 'group', 'text-left'],
            ['ledger', 'ledger', 'text-left'], 
            ['description', 'description', 'text-left'],
            ['actions', 'actions', 'text-center']
        );

        return $rows;
    }

    public function index()
    {
        $title = 'Advance Categories';
        try {

            $advanceCategories = AdvanceCategory::with(['chartOfAccount.accountGroup'])
            ->when(!datatableOrdering(), function($query){
                return $query->orderby('id', 'desc');
            });

            $options = [
                'advance-category-edit' => auth()->user()->hasPermissionTo('advance-category-edit'),
                'advance-category-delete' => auth()->user()->hasPermissionTo('advance-category-delete')
            ];

            if (request()->ajax()) {
                return Datatables::of($advanceCategories)
                ->addIndexColumn()
                ->addColumn('group', function($advanceCategory) {
                   return isset($advanceCategory->chartOfAccount) ? '['.$advanceCategory->chartOfAccount->accountGroup->code.'] '.$advanceCategory->chartOfAccount->accountGroup->name : '';
                })
                ->filterColumn('group', function ($query, $keyword) {
                    return $query->whereHas('chartOfAccount.accountGroup', function ($query) use($keyword) {
                        $query->where('name', 'LIKE', '%'.$keyword.'%')
                              ->orwhere('code', 'LIKE', '%'.$keyword.'%');
                    });
                })
                ->addColumn('ledger', function($advanceCategory) {
                    return isset($advanceCategory->chartOfAccount) ? '['.$advanceCategory->chartOfAccount->code.'] '.$advanceCategory->chartOfAccount->name : '';
                })
                ->filterColumn('ledger', function ($query, $keyword) {
                    return $query->whereHas('chartOfAccount', function ($query) use($keyword) {
                        $query->where('name', 'LIKE', '%'.$keyword.'%')->orwhere('code', 'LIKE', '%'.$keyword.'%');
                    });
                })
                
                ->addColumn('actions', function($advanceCategory) use($options){
                    $actions = '';

                    if($options['advance-category-edit']){
                        $actions .= '<a class="btn btn-xs btn-primary rounded-circle m-1" href="'. url('accounting/advance-categories/'.$advanceCategory->id.'/edit').'"><i class="las la-edit"></i></a>';
                    }

                    if($options['advance-category-delete']){
                        $actions .= '<a href="javascript:void(0)" class="btn btn-xs btn-danger m-1" data-src="'.route('accounting.advance-categories.destroy', $advanceCategory->id).'" onclick="deleteFromCRUD($(this))"><i class="la la-trash"></i></a>';
                    }
                    return $actions;
                })
                ->rawColumns(['group','ledger','actions'])
                ->make(true);
            }

            $data = [
                'title' => $title,
                'headerColumns'=> $this->headerColumns(),
            ];
            return view('accounting.backend.pages.advanceCategories.index', $data);
        }catch (\Throwable $th){
            return $this->backWithError($th->getMessage());
        }
    }

    public function create()
    {
        $data = [
            'title' => 'New Advance category',
        ];

        return view('accounting.backend.pages.advanceCategories.create', $data);
    }

    public function store(Request $request)
    {
        $request->validate([
            'code' => 'required|unique:advance_categories',
            'name' => 'required',
            'chart_of_account_id' => 'required',
        ]);

        try{
            AdvanceCategory::create($request->all());
            return $this->redirectBackWithSuccess("Advance category has been created successfully", 'accounting.advance-categories.create');
        }catch (\Throwable $th){
            return $this->backWithError($th->getMessage());
        }
    }

    public function show($id)
    {
        
    }

    public function edit($id)
    {
        $data = [
            'title' => 'Edit Advance category',
            'advanceCategory' => AdvanceCategory::findOrFail($id)
        ];

        return view('accounting.backend.pages.advanceCategories.edit', $data);
    }

    public function update(Request $request, $id)
    {
        $request->validate([
            'code' => 'required|unique:advance_categories,code,'.$id,
            'name' => 'required',
            'chart_of_account_id' => 'required',
        ]);

        try{
            AdvanceCategory::find($id)->fill($request->all())->save();
            return $this->redirectBackWithSuccess("Advance category has been updated successfully", 'accounting.advance-categories.index');
        }catch (\Throwable $th){
            return $this->backWithError($th->getMessage());
        }
    }

    public function destroy($id)
    {
        try{
            AdvanceCategory::find($id)->delete();
            return response()->json([
                'success' => true,
                'message' => "Advance category has been Deleted!"
            ]);
        }catch (\Throwable $th){
            return response()->json([
                'success' => false,
                'message' => $th->getMessage()
            ]);
        }
    }
}
