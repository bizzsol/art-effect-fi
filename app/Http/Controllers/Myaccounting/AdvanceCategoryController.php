<?php
bolt_decrypt( __FILE__ , '1Wq8xO'); return 0;
##!!!##