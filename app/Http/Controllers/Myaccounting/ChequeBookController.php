<?php
bolt_decrypt( __FILE__ , 'AdX2aX'); return 0;
##!!!##