<?php
bolt_decrypt( __FILE__ , 'iM8bOa'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcTXlhY2NvdW50aW5nXEludGVncmF0aW9uOwoKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXENvbnRyb2xsZXI7CnVzZSBJbGx1bWluYXRlXEh0dHBcUmVxdWVzdDsKdXNlIEFwcCwgREIsIERhdGFUYWJsZXM7Cgp1c2UgXEFwcFxNb2RlbHNcSW50ZWdyYXRpb25cUHJvY2VzczsKCmNsYXNzIFByb2Nlc3NDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlcgp7CgogICAgLyoqCiAgICAgKiBTZXQgZ2xvYmFsIGRhdGEgdGFibGUgaGVhZGVycy4KICAgICAqCiAgICAgKiBAcmV0dXJuIGhlYWRlckNvbHVtbnMKICAgICAqLwogICAgIHB1YmxpYyBmdW5jdGlvbiBoZWFkZXJDb2x1bW5zKCR2YWx1ZT0nJykKICAgICB7CiAgICAgICAgcmV0dXJuIGFycmF5KAogICAgICAgICAgICBbJ1NMJywgJ1NMJ10sCiAgICAgICAgICAgIFsnY29kZScsICdjb2RlJyxdLAogICAgICAgICAgICBbJ25hbWUnLCAnbmFtZSddLAogICAgICAgICAgICBbJ2Rlc2NyaXB0aW9uJywgJ2Rlc2NyaXB0aW9uJywgJ3RleHQtbGVmdCddLAogICAgICAgICAgICBbJ2FjdGlvbnMnLCAnYWN0aW9ucycsICd0ZXh0LWNlbnRlciddLAogICAgICAgICk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIGluZGV4KCkKICAgIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBpZiAocmVxdWVzdCgpLT5hamF4KCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBEYXRhdGFibGVzOjpvZigKICAgICAgICAgICAgICAgICAgICBQcm9jZXNzOjp3aGVuKCFkYXRhdGFibGVPcmRlcmluZygpLCBmdW5jdGlvbigkcXVlcnkpewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHF1ZXJ5LT5vcmRlcmJ5KCdpZCcsICdkZXNjJyk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC0+YWRkSW5kZXhDb2x1bW4oKQogICAgICAgICAgICAgICAgLT5hZGRDb2x1bW4oJ2FjdGlvbnMnLCBmdW5jdGlvbigkcHJvY2Vzcyl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICc8YSBjbGFzcz0iYnRuIGJ0bi14cyBidG4tcHJpbWFyeSBtbC0xIiBocmVmPSInLnVybCgnYWNjb3VudGluZy9wcm9jZXNzZXMvJy4kcHJvY2Vzcy0+aWQuJy9lZGl0JykuJyI+PGkgY2xhc3M9ImxhIGxhLWVkaXQiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciBtbC0xIiBvbmNsaWNrPSJkZWxldGVGcm9tQ1JVRCgkKHRoaXMpKSIgZGF0YS1zcmM9IicuIHJvdXRlKCdhY2NvdW50aW5nLnByb2Nlc3Nlcy5kZXN0cm95JywgJHByb2Nlc3MtPmlkKS4nIj48aSBjbGFzcz0ibGEgbGEtdHJhc2giPjwvaT48L2E+JzsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAtPnJhd0NvbHVtbnMoWydhY3Rpb25zJ10pCiAgICAgICAgICAgICAgICAtPm1ha2UodHJ1ZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiAnTGlzdCBvZiBQcm9jZXNzZXMnLAogICAgICAgICAgICAgICAgJ2hlYWRlckNvbHVtbnMnID0+ICR0aGlzLT5oZWFkZXJDb2x1bW5zKCksCiAgICAgICAgICAgIF07CiAgICAgICAgICAgIHJldHVybiB2aWV3KCdhY2NvdW50aW5nLmJhY2tlbmQucGFnZXMuaW50ZWdyYXRpb25zLnByb2Nlc3Nlcy5pbmRleCcsICRkYXRhKTsKICAgICAgICB9Y2F0Y2ggKFxUaHJvd2FibGUgJHRoKXsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5iYWNrV2l0aEVycm9yKCR0aC0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIGNyZWF0ZSgpCiAgICB7CiAgICAgICAgJGRhdGEgPSBbCiAgICAgICAgICAgICd0aXRsZScgPT4gJ05ldyBQcm9jZXNzJywKICAgICAgICAgICAgJ2NvZGUnID0+IHVuaXF1ZUNvZGVXaXRob3V0UHJlZml4KDIsJ3Byb2Nlc3NlcycsJ2NvZGUnKQogICAgICAgIF07CgogICAgICAgIHJldHVybiB2aWV3KCdhY2NvdW50aW5nLmJhY2tlbmQucGFnZXMuaW50ZWdyYXRpb25zLnByb2Nlc3Nlcy5jcmVhdGUnLCAkZGF0YSk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHN0b3JlKFJlcXVlc3QgJHJlcXVlc3QpCiAgICB7CiAgICAgICAgJHJlcXVlc3QtPnZhbGlkYXRlKFsKICAgICAgICAgICAgJ2NvZGUnID0+ICdyZXF1aXJlZHx1bmlxdWU6cHJvY2Vzc2VzJywKICAgICAgICAgICAgJ25hbWUnID0+ICdyZXF1aXJlZHx1bmlxdWU6cHJvY2Vzc2VzJywKICAgICAgICBdKTsKCiAgICAgICAgREI6OmJlZ2luVHJhbnNhY3Rpb24oKTsKICAgICAgICB0cnl7CiAgICAgICAgICAgIFByb2Nlc3M6OmNyZWF0ZSgkcmVxdWVzdC0+YWxsKCkpOwoKICAgICAgICAgICAgREI6OmNvbW1pdCgpOwogICAgICAgICAgICByZXR1cm4gJHRoaXMtPnJlZGlyZWN0QmFja1dpdGhTdWNjZXNzKCJQcm9jZXNzIGhhcyBiZWVuIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5IiwgJ2FjY291bnRpbmcucHJvY2Vzc2VzLmNyZWF0ZScpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICBEQjo6cm9sbGJhY2soKTsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5iYWNrV2l0aEVycm9yKCR0aC0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIGVkaXQoJGlkKQogICAgewogICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAndGl0bGUnID0+ICdFZGl0IFByb2Nlc3MnLAogICAgICAgICAgICAncHJvY2VzcycgPT4gUHJvY2Vzczo6ZmluZE9yRmFpbCgkaWQpCiAgICAgICAgXTsKCiAgICAgICAgcmV0dXJuIHZpZXcoJ2FjY291bnRpbmcuYmFja2VuZC5wYWdlcy5pbnRlZ3JhdGlvbnMucHJvY2Vzc2VzLmVkaXQnLCAkZGF0YSk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHVwZGF0ZShSZXF1ZXN0ICRyZXF1ZXN0LCAkaWQpCiAgICB7CiAgICAgICAgJHJlcXVlc3QtPnZhbGlkYXRlKFsKICAgICAgICAgICAgJ25hbWUnID0+ICdyZXF1aXJlZHx1bmlxdWU6cHJvY2Vzc2VzLG5hbWUsJy4kaWQsCiAgICAgICAgXSk7CgogICAgICAgIERCOjpiZWdpblRyYW5zYWN0aW9uKCk7CiAgICAgICAgdHJ5ewogICAgICAgICAgICAkcHJvY2VzcyA9IFByb2Nlc3M6OmZpbmQoJGlkKTsKICAgICAgICAgICAgJHByb2Nlc3MtPmZpbGwoJHJlcXVlc3QtPmFsbCgpKTsKICAgICAgICAgICAgJHByb2Nlc3MtPnNhdmUoKTsKCiAgICAgICAgICAgIERCOjpjb21taXQoKTsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5yZWRpcmVjdEJhY2tXaXRoU3VjY2VzcygiUHJvY2VzcyBoYXMgYmVlbiB1cGRhdGVkIHN1Y2Nlc3NmdWxseSIsICdhY2NvdW50aW5nLnByb2Nlc3Nlcy5pbmRleCcpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICBEQjo6cm9sbGJhY2soKTsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5iYWNrV2l0aEVycm9yKCR0aC0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIGRlc3Ryb3koJGlkKQogICAgewogICAgICAgIERCOjpiZWdpblRyYW5zYWN0aW9uKCk7CiAgICAgICAgdHJ5ewogICAgICAgICAgICBQcm9jZXNzOjpmaW5kKCRpZCktPmRlbGV0ZSgpOwoKICAgICAgICAgICAgREI6OmNvbW1pdCgpOwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICdtZXNzYWdlJyA9PiAiUHJvY2VzcyBoYXMgYmVlbiBEZWxldGVkISIKICAgICAgICAgICAgXSk7CiAgICAgICAgfWNhdGNoIChcVGhyb3dhYmxlICR0aCl7CiAgICAgICAgICAgIERCOjpyb2xsYmFjaygpOwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gJHRoLT5nZXRNZXNzYWdlKCkKICAgICAgICAgICAgXSk7CiAgICAgICAgfQogICAgfQp9Cg==