<?php
bolt_decrypt( __FILE__ , 'KmMBj7'); return 0;
##!!!##