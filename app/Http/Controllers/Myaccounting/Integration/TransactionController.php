<?php
bolt_decrypt( __FILE__ , '1TxZ2o'); return 0;
##!!!##