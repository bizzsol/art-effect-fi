<?php
bolt_decrypt( __FILE__ , '76yW8m'); return 0;
##!!!##