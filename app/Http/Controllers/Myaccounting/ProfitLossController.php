<?php
bolt_decrypt( __FILE__ , '2QczKM'); return 0;
##!!!##