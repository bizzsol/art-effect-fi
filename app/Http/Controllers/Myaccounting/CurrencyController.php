<?php
bolt_decrypt( __FILE__ , 'FSrEOa'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcTXlhY2NvdW50aW5nOwoKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXENvbnRyb2xsZXI7CnVzZSBJbGx1bWluYXRlXEh0dHBcUmVxdWVzdDsKCnVzZSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQWNjb3VudHNcQ3VycmVuY3lUeXBlOwp1c2UgXEFwcFxNb2RlbHNcUG1zTW9kZWxzXEFjY291bnRzXEN1cnJlbmN5OwoKdXNlIEFwcCwgREIsIERhdGFUYWJsZXM7CnVzZSBJbGx1bWluYXRlXFN1cHBvcnRcRmFjYWRlc1xBdXRoOwoKY2xhc3MgQ3VycmVuY3lDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlcgp7CiAgICBwdWJsaWMgZnVuY3Rpb24gaGVhZGVyQ29sdW1ucygkdmFsdWUgPSAnJykKICAgIHsKICAgICAgICByZXR1cm4gYXJyYXkoCiAgICAgICAgICAgIFsnU0wnLCAnU0wnXSwKICAgICAgICAgICAgWydjdXJyZW5jeV90eXBlJywgJ2N1cnJlbmN5X3R5cGUnLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWydjb2RlJywgJ2NvZGUnLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWyduYW1lJywgJ25hbWUnLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWydzeW1ib2wnLCAnc3ltYm9sJywgJ3RleHQtY2VudGVyJ10sCiAgICAgICAgICAgIFsnaHVuZHJlZHMnLCAnaHVuZHJlZHMnLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWydjb3VudHJ5JywgJ2NvdW50cnknLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWyduYW1lJywgJ25hbWUnLCAndGV4dC1jZW50ZXInXSwKICAgICAgICAgICAgWydkZXNjcmlwdGlvbicsICdkZXNjcmlwdGlvbiddLAogICAgICAgICAgICBbJ2FjdGlvbnMnLCAnYWN0aW9ucycsICd0ZXh0LWNlbnRlciddCiAgICAgICAgKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gaW5kZXgoKQogICAgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmIChyZXF1ZXN0KCktPmFqYXgoKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIERhdGFUYWJsZXM6Om9mKEN1cnJlbmN5OjpxdWVyeSgpKQogICAgICAgICAgICAgICAgICAgIC0+YWRkSW5kZXhDb2x1bW4oKQogICAgICAgICAgICAgICAgICAgIC0+YWRkQ29sdW1uKCdjdXJyZW5jeV90eXBlJywgZnVuY3Rpb24gKCRjdXJyZW5jeSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGN1cnJlbmN5LT5jdXJyZW5jeVR5cGUgPyAkY3VycmVuY3ktPmN1cnJlbmN5VHlwZS0+bmFtZSA6ICcnOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLT5maWx0ZXJDb2x1bW4oJ2N1cnJlbmN5X3R5cGUnLCBmdW5jdGlvbiAoJHF1ZXJ5LCAka2V5d29yZCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHF1ZXJ5LT53aGVyZUhhcygnY3VycmVuY3lUeXBlJywgZnVuY3Rpb24gKCRxdWVyeSkgdXNlICgka2V5d29yZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHF1ZXJ5LT53aGVyZSgnbmFtZScsICdMSUtFJywgJyUnIC4gJGtleXdvcmQgLiAnJScpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIC0+b3JkZXJDb2x1bW4oJ2N1cnJlbmN5X3R5cGUnLCBmdW5jdGlvbiAoJHF1ZXJ5LCAkb3JkZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBsZWFzZVNvcnRNZSgkcXVlcnksICRvcmRlciwgQ3VycmVuY3lUeXBlOjpzZWxlY3QoJ2N1cnJlbmN5X3R5cGVzLm5hbWUnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLT53aGVyZUNvbHVtbignY3VycmVuY3lfdHlwZXMuaWQnLCAnY3VycmVuY2llcy5jdXJyZW5jeV90eXBlX2lkJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0+dGFrZSgxKQogICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLT5hZGRDb2x1bW4oJ2Rlc2NyaXB0aW9uJywgZnVuY3Rpb24gKCRjdXJyZW5jeSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGN1cnJlbmN5LT5kZXNjOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLT5maWx0ZXJDb2x1bW4oJ2Rlc2NyaXB0aW9uJywgZnVuY3Rpb24gKCRxdWVyeSwgJGtleXdvcmQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRxdWVyeS0+eHdoZXJlKCdkZXNjJywgJ0xJS0UnLCAnJScgLiAka2V5d29yZCAuICclJyk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAtPm9yZGVyQ29sdW1uKCdkZXNjcmlwdGlvbicsIGZ1bmN0aW9uICgkcXVlcnksICRvcmRlcikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHF1ZXJ5LT5vcmRlckJ5KCdkZXNjJywgJG9yZGVyKTsKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIC0+YWRkQ29sdW1uKCdhY3Rpb25zJywgZnVuY3Rpb24gKCRjdXJyZW5jeSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxhIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1wcmltYXJ5IiBocmVmPSInLnVybCgnYWNjb3VudGluZy9jdXJyZW5jaWVzLycuJGN1cnJlbmN5LT5pZC4nL2VkaXQnKS4nIj48aSBjbGFzcz0ibGEgbGEtZWRpdCI+PC9pPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIiBvbmNsaWNrPSJkZWxldGVGcm9tQ1JVRCgkKHRoaXMpKSIgZGF0YS1zcmM9Iicucm91dGUoJ2FjY291bnRpbmcuY3VycmVuY2llcy5kZXN0cm95JywgJGN1cnJlbmN5LT5pZCkuJyI+PGkgY2xhc3M9ImxhIGxhLXRyYXNoIj48L2k+PC9hPic7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAtPnJhd0NvbHVtbnMoWydhY3Rpb25zJ10pCiAgICAgICAgICAgICAgICAgICAgLT50b0pzb24oKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHZpZXcoJ2FjY291bnRpbmcuYmFja2VuZC5wYWdlcy5jdXJyZW5jeS5jdXJyZW5jaWVzLmluZGV4JywgWwogICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiAnTGlzdCBvZiBDdXJyZW5jeScsCiAgICAgICAgICAgICAgICAnaGVhZGVyQ29sdW1ucycgPT4gJHRoaXMtPmhlYWRlckNvbHVtbnMoKQogICAgICAgICAgICBdKTsKICAgICAgICB9IGNhdGNoIChcVGhyb3dhYmxlICR0aCkgewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPmJhY2tXaXRoRXJyb3IoJHRoLT5nZXRNZXNzYWdlKCkpOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gY3JlYXRlKCkKICAgIHsKICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgJ3RpdGxlJyA9PiAnTmV3IEN1cnJlbmN5JywKICAgICAgICAgICAgJ2N1cnJlbmN5VHlwZXMnID0+IEN1cnJlbmN5VHlwZTo6YWxsKCksCiAgICAgICAgXTsKCiAgICAgICAgcmV0dXJuIHZpZXcoJ2FjY291bnRpbmcuYmFja2VuZC5wYWdlcy5jdXJyZW5jeS5jdXJyZW5jaWVzLmNyZWF0ZScsICRkYXRhKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gc3RvcmUoUmVxdWVzdCAkcmVxdWVzdCkKICAgIHsKICAgICAgICAkcmVxdWVzdC0+dmFsaWRhdGUoWwogICAgICAgICAgICAnY3VycmVuY3lfdHlwZV9pZCcgPT4gJ3JlcXVpcmVkJywKICAgICAgICAgICAgJ2NvZGUnID0+ICdyZXF1aXJlZHx1bmlxdWU6Y3VycmVuY2llcycsCiAgICAgICAgICAgICduYW1lJyA9PiAncmVxdWlyZWR8dW5pcXVlOmN1cnJlbmNpZXMnLAogICAgICAgICAgICAnc3ltYm9sJyA9PiAncmVxdWlyZWR8dW5pcXVlOmN1cnJlbmNpZXMnLAogICAgICAgICAgICAnaHVuZHJlZHMnID0+ICdyZXF1aXJlZCcsCiAgICAgICAgICAgICdjb3VudHJ5JyA9PiAncmVxdWlyZWQnLAogICAgICAgIF0pOwoKICAgICAgICBEQjo6YmVnaW5UcmFuc2FjdGlvbigpOwogICAgICAgIHRyeXsKICAgICAgICAgICAgQ3VycmVuY3k6OmNyZWF0ZSgkcmVxdWVzdC0+YWxsKCkpOwogICAgICAgICAgICBEQjo6Y29tbWl0KCk7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+YmFja1dpdGhTdWNjZXNzKCJDdXJyZW5jeSBoYXMgYmVlbiBjcmVhdGVkIHN1Y2Nlc3NmdWxseSIpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICBEQjo6cm9sbGJhY2soKTsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5iYWNrV2l0aEVycm9yKCR0aC0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHNob3coJGlkKQogICAgewogICAgICAgIAogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBlZGl0KCRpZCkKICAgIHsKICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgJ3RpdGxlJyA9PiAnRWRpdCBDdXJyZW5jeScsCiAgICAgICAgICAgICdjdXJyZW5jeVR5cGVzJyA9PiBDdXJyZW5jeVR5cGU6OmFsbCgpLAogICAgICAgICAgICAnY3VycmVuY3knID0+IEN1cnJlbmN5OjpmaW5kT3JGYWlsKCRpZCkKICAgICAgICBdOwoKICAgICAgICByZXR1cm4gdmlldygnYWNjb3VudGluZy5iYWNrZW5kLnBhZ2VzLmN1cnJlbmN5LmN1cnJlbmNpZXMuZWRpdCcsICRkYXRhKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gdXBkYXRlKFJlcXVlc3QgJHJlcXVlc3QsICRpZCkKICAgIHsKICAgICAgICAkcmVxdWVzdC0+dmFsaWRhdGUoWwogICAgICAgICAgICAnY3VycmVuY3lfdHlwZV9pZCcgPT4gJ3JlcXVpcmVkJywKICAgICAgICAgICAgJ2NvZGUnID0+ICdyZXF1aXJlZHx1bmlxdWU6Y3VycmVuY2llcyxjb2RlLCcuJGlkLAogICAgICAgICAgICAnbmFtZScgPT4gJ3JlcXVpcmVkfHVuaXF1ZTpjdXJyZW5jaWVzLG5hbWUsJy4kaWQsCiAgICAgICAgICAgICdzeW1ib2wnID0+ICdyZXF1aXJlZHx1bmlxdWU6Y3VycmVuY2llcyxzeW1ib2wsJy4kaWQsCiAgICAgICAgICAgICdodW5kcmVkcycgPT4gJ3JlcXVpcmVkJywKICAgICAgICAgICAgJ2NvdW50cnknID0+ICdyZXF1aXJlZCcsCiAgICAgICAgXSk7CgogICAgICAgIERCOjpiZWdpblRyYW5zYWN0aW9uKCk7CiAgICAgICAgdHJ5ewogICAgICAgICAgICAkY3VycmVuY3kgPSBDdXJyZW5jeTo6ZmluZCgkaWQpOwogICAgICAgICAgICAkY3VycmVuY3ktPmZpbGwoJHJlcXVlc3QtPmFsbCgpKTsKICAgICAgICAgICAgJGN1cnJlbmN5LT5zYXZlKCk7CgogICAgICAgICAgICBEQjo6Y29tbWl0KCk7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+YmFja1dpdGhTdWNjZXNzKCJDdXJyZW5jeSBoYXMgYmVlbiB1cGRhdGVkIHN1Y2Nlc3NmdWxseSIpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICBEQjo6cm9sbGJhY2soKTsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5iYWNrV2l0aEVycm9yKCR0aC0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIGRlc3Ryb3koJGlkKQogICAgewogICAgICAgIERCOjpiZWdpblRyYW5zYWN0aW9uKCk7CiAgICAgICAgdHJ5ewogICAgICAgICAgICAkZGVsZXRlID0gQ3VycmVuY3k6OmZpbmQoJGlkKS0+ZGVsZXRlKCk7CgogICAgICAgICAgICBEQjo6Y29tbWl0KCk7CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsKICAgICAgICAgICAgICAgICdzdWNjZXNzJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgJ21lc3NhZ2UnID0+ICJDdXJyZW5jeSBoYXMgYmVlbiBEZWxldGVkISIKICAgICAgICAgICAgXSk7CiAgICAgICAgfWNhdGNoIChcVGhyb3dhYmxlICR0aCl7CiAgICAgICAgICAgIERCOjpyb2xsYmFjaygpOwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gJHRoLT5nZXRNZXNzYWdlKCkKICAgICAgICAgICAgXSk7CiAgICAgICAgfQogICAgfQp9Cg==