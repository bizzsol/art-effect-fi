<?php
bolt_decrypt( __FILE__ , 'DMQTLu'); return 0;
##!!!##