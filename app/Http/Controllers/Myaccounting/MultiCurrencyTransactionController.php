<?php
bolt_decrypt( __FILE__ , 'PaekF0'); return 0;
##!!!##