<?php
bolt_decrypt( __FILE__ , 'gRbKPB'); return 0;
##!!!##