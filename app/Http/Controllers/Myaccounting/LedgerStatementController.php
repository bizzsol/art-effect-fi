<?php
bolt_decrypt( __FILE__ , 'opw041'); return 0;
##!!!##