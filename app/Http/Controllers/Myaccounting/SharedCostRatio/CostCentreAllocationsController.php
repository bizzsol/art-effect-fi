<?php
bolt_decrypt( __FILE__ , '9XeMaS'); return 0;
##!!!##