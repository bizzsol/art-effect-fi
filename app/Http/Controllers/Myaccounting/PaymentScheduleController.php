<?php
bolt_decrypt( __FILE__ , 'pHCOPH'); return 0;
##!!!##