<?php
bolt_decrypt( __FILE__ , 'ZPQ1Xs'); return 0;
##!!!##