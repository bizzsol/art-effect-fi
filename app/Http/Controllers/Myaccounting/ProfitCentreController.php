<?php
bolt_decrypt( __FILE__ , 'ZV4w3Z'); return 0;
##!!!##