<?php
bolt_decrypt( __FILE__ , 'OQhY3c'); return 0;
##!!!##