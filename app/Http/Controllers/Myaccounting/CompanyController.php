<?php
bolt_decrypt( __FILE__ , 'TLDCoU'); return 0;
##!!!##