<?php
bolt_decrypt( __FILE__ , 'my1Xcj'); return 0;
##!!!##