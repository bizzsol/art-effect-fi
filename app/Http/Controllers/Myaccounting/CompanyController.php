<?php
bolt_decrypt( __FILE__ , 'm8g8m1'); return 0;
##!!!##