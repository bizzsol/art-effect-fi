<?php
bolt_decrypt( __FILE__ , '3jTp2e'); return 0;
##!!!##