<?php
bolt_decrypt( __FILE__ , 'XhMH0r'); return 0;
##!!!##