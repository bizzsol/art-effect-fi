<?php
bolt_decrypt( __FILE__ , 'U0DaEw'); return 0;
##!!!##