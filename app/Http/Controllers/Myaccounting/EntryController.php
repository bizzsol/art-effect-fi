<?php
bolt_decrypt( __FILE__ , '20NjwY'); return 0;
##!!!##