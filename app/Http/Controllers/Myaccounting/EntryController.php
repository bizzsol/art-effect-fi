<?php
bolt_decrypt( __FILE__ , 'a4PX8s'); return 0;
##!!!##