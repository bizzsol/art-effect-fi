<?php
bolt_decrypt( __FILE__ , 'kr94QP'); return 0;
##!!!##