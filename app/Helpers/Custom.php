<?php
bolt_decrypt( __FILE__ , 'JHi0qL'); return 0;
##!!!##