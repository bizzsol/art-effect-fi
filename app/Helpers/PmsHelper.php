<?php
bolt_decrypt( __FILE__ , 'mMV5bA'); return 0;
##!!!##