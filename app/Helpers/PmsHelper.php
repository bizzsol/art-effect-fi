<?php
bolt_decrypt( __FILE__ , 'enwGF1'); return 0;
##!!!##