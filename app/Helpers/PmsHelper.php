<?php
bolt_decrypt( __FILE__ , 'jLHIJX'); return 0;
##!!!##