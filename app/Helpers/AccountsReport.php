<?php
bolt_decrypt( __FILE__ , 'HL10nB'); return 0;
##!!!##