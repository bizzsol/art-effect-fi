<?php
bolt_decrypt( __FILE__ , 'rm69Ok'); return 0;
##!!!##