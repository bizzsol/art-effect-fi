<?php
bolt_decrypt( __FILE__ , 'Ign9y7'); return 0;
##!!!##