<?php
bolt_decrypt( __FILE__ , 'MG3qHh'); return 0;
##!!!##