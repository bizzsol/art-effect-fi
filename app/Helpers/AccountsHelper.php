<?php
bolt_decrypt( __FILE__ , 'GRzu11'); return 0;
##!!!##