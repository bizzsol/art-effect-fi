<?php
bolt_decrypt( __FILE__ , '3TYv2Z'); return 0;
##!!!##