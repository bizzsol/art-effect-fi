<?php
bolt_decrypt( __FILE__ , 'eQSNIg'); return 0;
##!!!##