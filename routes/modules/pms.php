<?php
bolt_decrypt( __FILE__ , 'paWN6K'); return 0;
##!!!##